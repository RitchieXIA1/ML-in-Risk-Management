----------核心CYD存量客户LTV取数及计算脚本设计思路（优化）----------
----------20220704----------

----------数据目录----------
--1、基础数据
--2、模型数据
--3、参数数据
--4、结果输出--

--------1、基础数据（共计11个字段）--------
----1.1字段明细----
--1.1.1.id_number
--1.1.2.sx_date
--1.1.3.credit_limit_latest
--1.1.4.mat_before
--1.1.5.bal_cum_before
--1.1.6.interest_ave _before
--1.1.7.max_monthes_to_end
--1.1.8.stat_month
--1.1.9.age
--1.1.10.score
--1.1.11.if_ychb--
------1.2中间表明细------
--1.2.1fxb.ly_ltv_cyd_basicdata1
--1.2.2fxb.ly_ltv_cyd_basicdata2--

--------2、模型数据--------

------2.1损失模型（模型变量1、基础数据已包含）------
----2.1.1字段明细----
--2.1.1.1.bal_cum_before
--2.1.1.2.credit_limit_latest--
----2.1.2中间表明细（无）----

------2.2日均余额模型------
----2.2.1字段明细----
--2.2.1.1.loan_tpay_amt_1st
--2.2.1.2.uncleared_cnt
--2.2.1.3.inte_repay_12m
--2.2.1.4.loan_6m_apply_prds
--2.2.1.5.inte_repay_3m
--2.2.1.6.loan_interest_incom
--2.2.1.7.loan_3m_amt
--2.2.1.8.coll_in_his_times
--2.2.1.9.loan_3m_credit_times
--2.2.1.10.bal_plan_ave_cust--
----2.2.2中间表明细----
--2.2.2.1fxb.ly_ltv_cyd_modeldata1--


------2.3无余额用款概率模型------
----2.3.1字段明细----
--2.3.1.1.score
--2.3.1.2.credit_limit_latest
--2.3.1.3.loan_1y_apply_prds
--2.3.1.4.last_loan_months
--2.3.1.5.loan_payed_terms
--2.3.1.6.age
--2.3.1.7.overdue_days_max
----2.3.2中间表明细----
--2.3.2.1fxb.ly_ltv_cyd_modeldata2



------2.4模型数据输出结果------
--2.4.1.1fxb.ly_ltv_cyd_modeldata3--


--------3、参数数据--------
------3.1APR参数------
------3.2PD参数------
------3.3催收成本参数------
----3.3.1字段明细----
--3.1.1.1. para_rp_wtd_apr
--3.2.1.1. para_pd
--3.2.1.2. para_pd_adj
--3.3.1.1. para_coll_fee
----3.3.2中间表明细----
--3.3.2.1.fxb.cust_ltv_para--

--------4、结果输出--------
----fxb.cust_ltv（其他代码检查无误后完善）----
--待补充--



--版本号：2022年7月优化版V1.1--
--作者：李扬--
--核验：--



----基础数据1（basicdata1，主键：id_number）——获取核心CYD客户id_number、loanid、首次授信时间、最新额度、当前余额、当前最大逾期期数、平均利率、贷款到期日距今最大月份数数据----
DROP TABLE IF EXISTS fxb.ly_ltv_cyd_basicdata1;
CREATE TABLE fxb.ly_ltv_cyd_basicdata1 AS
--A基础数据主表，取核心CYD客户（不包括logo='0301'产品，此产品2020年起已无新增申请）基本信息：id_number、loanid、首次授信时间数据
--B取切片时点最新额度表，生产部署直接取sda.v_s_cust_product最新额度数据
--C当前余额（正常余额+核销余额）、逾期期数表、平均利率（新增待执行）、贷款到期日距今最大月份数表（可以为负值）--
SELECT    A.id_number
         ,A.id_number_r
         ,A.loanid
         ,A.sx_date
         ,coalesce(B.credit_limit,B2.credit_limit_child,0)/100 AS credit_limit_latest --【优先取主表额度，再取子产品额度 ，用 0 填充 NULL】【coalesce返回第一个非null的值】
         ,C.bal_cum_before
         ,C.mat_before
         ,C.interest_ave_before     /*无百分号，取值范围5.22~22.8*/
		 ,C.max_monthes_to_end
		 ,trunc(add_months(SYSDATE,-1),'MM') AS stat_month     --日期--
FROM 
--A基础数据主表（首次授信通过客户）--
	(SELECT *
	FROM 
		(SELECT   id_number
		         ,id_number_r
			     ,loanid
			     ,final_decision_effective_date AS sx_date	
			     ,ROW_NUMBER() OVER (PARTITION BY id_number ORDER BY FINAL_DECISION_EFFECTIVE_DATE ASC) AS row_no1
	    FROM risk_dm.customer_label
		WHERE    ORG_CODE = '301'
		       AND open_type = '核心'
		       AND logo in ('PLON')     /*不包括随鑫贷logo='0301',2020年以后不再有此产品*/ 
	           AND logo_trans='核心CYD'
		       AND apply_type in('1','2')
		       AND final_decision='OK'
			   AND final_decision_effective_date<=last_day(add_months(SYSDATE,-1))    --日期--
		       AND APP_RECOMM_BRANCH NOT IN ('7201','7101'))
	 WHERE row_no1=1)     A    /*首次授信通过*/
LEFT JOIN 
--B,B2最新额度表(数量上B表约比A表少1万人，关于B表credit_limit为NULL的，1、有apply_type=4被拒的情况；2、有额度被注销的情况)--
	(SELECT   id_number
	         ,credit_limit
	FROM 
	    (SELECT    id_number
		          ,credit_limit
		          ,ROW_NUMBER() OVER (PARTITION BY id_number ORDER BY date_update DESC) AS row_no1
		FROM  SDA.v_S_CUST_PRODUCT
		WHERE    product_logo='900'
	           AND org_code='301'
		       AND credit_limit IS NOT NULL)     /*不限制date_update，如果不取最新额度，部分客户额度可能缺失（log日志表2017年及以前数据不全）*/     --【看记录每天都有大量更新，就取最新额度吧、关注下面0额度】
	WHERE row_no1=1)     B  --/*id_number有5个重复，此处需去重，2022-07-04修复*/   
ON A.id_number=B.id_number
LEFT JOIN 
--/*未验证*/B2 【product_child 核心诚易贷有些子场景会把额度落在child（创新客户额度存在product_child里面？？？） ???】   
	(SELECT id_number,max(credit_limit) AS credit_limit_child
	FROM sda.v_S_CUST_PRODUCT_CHILD 
	WHERE    product_type IN ('0303','0304','0305') -- 【PLON子产品 ，子产品有冲突，不可以同时申请，保险起见取个大值】
	 	   AND org_code = '301'
	GROUP BY id_number)     B2 
ON A.id_number=B2.id_number
LEFT JOIN 
--C当前余额（正常余额+核销余额）、逾期期数、平均利率（新增待执行）、贷款到期日距今最大月份数表（可以为负值）表--
	(SELECT   t2.id_number
	         ,sum(tbal) AS bal_cum_before
	         ,max(actureterm) AS mat_before
			 ,round(sum(coalesce(tbal,0)*coalesce(int_rate,0))/sum(coalesce(tbal,0)),2) AS interest_ave_before     /*sql中0/0=null*/
			 ,round(max(months_between(enddate,last_day(add_months(SYSDATE,-1)))),2) AS max_monthes_to_end
	FROM 
		(SELECT  loanacno,loanid,enddate,int_rate
		FROM sda.v_s_pl_loan_acc
		WHERE    org_code='301'
		       AND bankid='0106'
			   AND open_type='核心'
			   AND begindate<=last_day(add_months(SYSDATE,-1))) t1  --日期--
	LEFT JOIN     --限制logo=plon--
    	(SELECT loanid,logo,id_number 
        FROM risk_dm.customer_label 
        WHERE    ORG_CODE = '301'
		       AND open_type = '核心'
	           AND logo_trans='核心CYD'
		       AND final_decision='OK'
			   AND final_decision_effective_date<=last_day(add_months(SYSDATE,-1))  --日期--
		       AND APP_RECOMM_BRANCH NOT IN ('7201','7101'))  t2
	on t1.loanid = t2.loanid
	LEFT JOIN 
		(SELECT   loanacno
		         ,(bal+fbal) as tbal
		         ,actureterm
		FROM risk_dm.loan_all
		WHERE STAT_MONTH=trunc(add_months(SYSDATE,-1),'MM'))  t3  --日期--
	ON t1.loanacno=t3.loanacno
    WHERE logo='PLON'
	GROUP BY id_number) C
ON A.id_number=C.id_number;  --【pl_loan_acc 表的id_number_r有缺失】/*前述id_number_r缺失问题2022-07-05修复，id_number从customer_label中获取*/
--【额度表有10%缺失，需调查原因，是不是正常调额】/*2022-07-05观测约5%（28076/537618）额度缺失，关于B表credit_limit为NULL的，1、有apply_type=4被拒的情况；2、有额度被注销的情况(SDA.v_S_CUST_PRODUCT中limit_cancel_date有值),缺失个例筛查基本都属于情况2*/



----基础数据2（basicdata2，主键：id_number）——核心CYD客户年龄、是否重组、是否一次还本、统计月前一月人行分、统计月前一月评级数据----
--B重组数据表取自：ltt_project_risk--
--C是否一次还本表关于一次还本的认定标准：客户当前存在一次还本还款方式的贷款，且余额>0--
DROP TABLE IF EXISTS fxb.ly_ltv_cyd_basicdata2;
CREATE TABLE fxb.ly_ltv_cyd_basicdata2 AS
SELECT   A.*
        ,round(datediff(last_day(stat_month),to_date(substr(id_number_r,7,4)||"-"||substr(id_number_r,11,2)||"-"||substr(id_number_r,13,2)))/365,2) AS age
        ,CASE WHEN B.id_number IS NOT NULL THEN 1 ELSE 0 END AS if_cz 
        ,CASE WHEN C.id_number IS NOT NULL THEN 1 ELSE 0 END AS if_ychb
        ,D.score
        ,D.score_date
        ,E.rating
        ,E.rating_month
FROM fxb.ly_ltv_cyd_basicdata1     A
--B是否重组表(ltt_project_risk)--
LEFT JOIN 
    (SELECT DISTINCT id_number FROM ltt_project_risk WHERE flag LIKE '%重组%')     B
ON A.id_number=B.id_number
--C是否一次还本表（一次还本的认定标准：客户当前存在一次还本还款方式的贷款，且余额>0）--
LEFT JOIN 
	(SELECT DISTINCT id_number
	FROM 
	    (SELECT loanacno,loanid,id_number 
	    FROM risk_dm.loan_acc 
	    WHERE    PAYMENT_CODE IN ('11') 
			   AND begindate<=last_day(add_months(SYSDATE,-1))     --日期--
	           AND org_code='301' 
	           AND bankid='0106' 
	           AND logo_trans='核心CYD')     t1
	LEFT JOIN 
	    (SELECT loanid,logo 
        FROM risk_dm.customer_label 
        WHERE  ORG_CODE = '301'
		       AND open_type = '核心'
	           AND logo_trans='核心CYD'
		       AND final_decision='OK'
			   AND final_decision_effective_date<=last_day(add_months(SYSDATE,-1))     --日期--
		       AND APP_RECOMM_BRANCH NOT IN ('7201','7101'))     t2
        ON t1.loanid=t2.loanid
	LEFT JOIN 
		(SELECT loanacno,loanid,(bal+fbal) AS tbal
		FROM risk_dm.loan_all 
		WHERE    (bal+fbal)>0
			   AND stat_month=trunc(add_months(SYSDATE,-1),'MM'))     t3     --日期--
	ON t1.loanacno=t3.loanacno
	WHERE    tbal>0
	       AND logo='PLON')     C
ON A.id_number=C.id_number
--D-score数据表（与rating_month保持一致,跑批日期月份数-2）--
LEFT JOIN
	(SELECT * 
	FROM 
	    (SELECT   id_number
	             ,score 
	             ,score_date
	             ,ROW_NUMBER() OVER(PARTITION BY id_number ORDER BY last_update_date DESC) AS row_no
	    FROM sda.s_pboc_score
	    WHERE score_date=last_day(add_months(SYSDATE,-2)))     --日期(新调整待验证)--
	WHERE row_no=1)     D
ON A.id_number=md5(D.id_number)
--E-rating数据（owner_id_number无重复）--
LEFT JOIN 
    (SELECT   owner_id_number
             ,rating
             ,rating_month
    FROM sda.S_RISK_CUST_RATING
--跑批日期月份数-2取年月生成字符串--
	WHERE    rating_month=TO_CHAR(EXTRACT(YEAR FROM ADD_MONTHS(SYSDATE,-2))||lpad(EXTRACT(MONTH FROM ADD_MONTHS(SYSDATE,-2)),2,0))
	       AND org_code='301')     E 	--日期--     /*2022-07-06补充org_code='301'条件*/
ON A.id_number=md5(E.owner_id_number)
;



----模型中间表——依据存量还款计划表，测算未来两年的计划日均余额----
DROP TABLE fxb.ly_ltv_cyd_modeldata_middle1;
CREATE TABLE fxb.ly_ltv_cyd_modeldata_middle1 AS
SELECT   id_number
        ,sum(bal_plan_ave_loan) AS bal_plan_ave_cust
FROM 
--计算单笔合同的未来2年的计划日均余额
--未来2年统一按730天计算--
	(SELECT  loanacno
	        ,id_number
	        ,round(max(bal_bet_cum)/730,0) AS bal_plan_ave_loan
	FROM 
--计算每期账单的占用天数
--计算每期账单的占用本金总额
--累加每期账单的占用本金总额--
		(SELECT   *
		         ,datediff(due_date_adj,start_date_adj) AS days_bet
		         ,current_balance_adj*datediff(due_date_adj,start_date_adj) AS bal_bet
		         ,sum(current_balance_adj*datediff(due_date_adj,start_date_adj))over(PARTITION BY loanacno ORDER BY seq) AS bal_bet_cum
		FROM 
--补全start_date;
--处理余额统计，例：2020年1月时点进行测算,统计时间范围('2020-01-01','2022-12-31')
--修正前START_date between ('2019-12-01','2022-12-31'),修正后 START_date——adj between ('2019-12-31','2022-12-31')
--修正前due_date between ('2020-01-01','2023-01-31'),修正后 due_date_adj between ('2020-01-01','2022-12-31')
--生成当期剩余本金 current_balance_adj(current_balance+principal_due)--
			(SELECT   *
			         ,CASE WHEN START_date <=last_day(add_months(SYSDATE,-1)) THEN last_day(add_months(SYSDATE,-1))     --日期--
			               WHEN START_date IS NULL AND ADD_MONTHS(due_date,-1)<=last_day(add_months(SYSDATE,-1)) THEN last_day(add_months(SYSDATE,-1))     --日期--
			               WHEN START_date IS NULL THEN ADD_MONTHS(due_date,-1) 
			               ELSE START_date END 
			          AS start_date_adj
			         ,CASE WHEN due_date>=trunc(ADD_MONTHS(last_day(add_months(SYSDATE,-1)),24),'DD') THEN trunc(ADD_MONTHS(last_day(add_months(SYSDATE,-1)),24),'DD')     --日期--
			               ELSE due_date END 
			          AS due_date_adj
			         ,(current_balance+principal_due) AS current_balance_adj
			FROM  
----planpay还款计划基础数据取数开始----
                (SELECT B.*,A.id_number 
				FROM
--1.A表取出核心CYD的存量合同编号loanacno,id_number--
				    (SELECT t1.loanacno,t1.id_number 
				    FROM 
						(SELECT  loanacno,id_number,loanid
						FROM  risk_dm.loan_acc
						WHERE    org_code='301'
					           AND bankid='0106'
					           AND logo_trans='核心CYD' 
							   AND begindate<=last_day(add_months(SYSDATE,-1)))     t1     --日期-- 
				    LEFT JOIN
				        (SELECT loanid,logo 
				        FROM risk_dm.customer_label 
				        WHERE    ORG_CODE = '301'
						       AND open_type = '核心'
					           AND logo_trans='核心CYD'
						       AND final_decision='OK'
							   AND final_decision_effective_date<=last_day(add_months(SYSDATE,-1))     --日期--
						       AND APP_RECOMM_BRANCH NOT IN ('7201','7101'))     t2
				    ON t1.loanid=t2.loanid
				    WHERE t2.logo='PLON')     A
				LEFT JOIN 
--2.关联还款计划表基础数据，计算计划日均余额时间区间'2020-02-01'至'2022-01-31'--
--因为start_date(5,782,335/421,922,319)有缺失，需要加工补全--
					(select   loanacno
					         ,seq
					         ,loan_start_date
					         ,due_date 
					         ,principal_due
					         ,current_balance
					         ,start_date
					 FROM sda.v_s_pl_schedule
					 WHERE    org_code = '301'
				            AND loan_start_date<=last_day(add_months(SYSDATE,-1))     --日期--
				            AND due_date>=trunc(SYSDATE,'MM')     --日期--     /*2022-05-07修正trunc,2022-07-07修正为trunc(SYSDATE,'MM')*/
				            AND due_date<=last_day(ADD_MONTHS(SYSDATE,24)))      B     --日期--
				ON A.loanacno=B.loanacno 
				WHERE B.loanacno IS NOT NULL )    planpay
--还款计划基础数据取数完成--
			ORDER BY loanacno,seq)
		ORDER BY loanacno,seq)  
	GROUP BY loanacno,id_number)
GROUP BY id_number
;



----模型数据1(modeldata1)——核心CYD有余额客户行为数据（日均余额预测模型）、还款计划表日均余额数据表----
DROP TABLE IF EXISTS fxb.ly_ltv_cyd_modeldata1;
CREATE TABLE fxb.ly_ltv_cyd_modeldata1 AS
SELECT   A.*
		,B.loan_tpay_amt_1st
		,B.uncleared_cnt
		,B.inte_repay_12m
		,B.loan_6m_apply_prds
		,B.inte_repay_3m
		,B.loan_interest_incom
		,B.loan_3m_amt
		,B.coll_in_his_times
		,B.loan_3m_credit_times
		,C.bal_plan_ave_cust
FROM fxb.ly_ltv_cyd_basicdata2     A
--B有余额客户行为数据表--
LEFT JOIN  
    (SELECT   id_number
             ,loan_tpay_amt_1st
			 ,uncleared_cnt
			 ,inte_repay_12m
			 ,loan_6m_apply_prds
			 ,inte_repay_3m
			 ,loan_interest_incom
			 ,loan_3m_amt
			 ,coll_in_his_times
			 ,loan_3m_credit_times
    FROM risk_dm.m_cust_behave_info
	WHERE STAT_MONTH=trunc(add_months(SYSDATE,-1),'MM'))     B     --日期-- 
ON A.id_number=B.id_number 
--C还款计划表日均余额数据表--
LEFT JOIN fxb.ly_ltv_cyd_modeldata_middle1     C
ON A.id_number=C.id_number
;
--check
SELECT * FROM ly_ltv_cyd_modeldata1 LIMIT 100;
SELECT * FROM ly_ltv_cyd_modeldata1 WHERE bal_cum_before >0 LIMIT 100;



----模型数据2(modeldata2)核心CYD无余额客户行为变量——loan_1y_apply_prds、last_loan_months、overdue_days_max、LOAN_PAYED_TERMS----
--行为特征数据不计入rf业务（限制IS_RISK_FREE=0）
DROP TABLE IF EXISTS  fxb.ly_ltv_cyd_modeldata2;
CREATE TABLE fxb.ly_ltv_cyd_modeldata2 AS
SELECT   A.*
        ,CASE WHEN b.num1 IS NOT NULL THEN num1
              WHEN c.id_number IS NULL THEN NULL 
              ELSE 0 END 
         AS LOAN_1Y_APPLY_PRDS
        ,d.last_loan_months
        ,e.overdue_days_max
        ,f.LOAN_PAYED_TERMS
FROM fxb.ly_ltv_cyd_modeldata1     A
LEFT JOIN
--loan_1y_apply_prds--
--近一年没有申请的：
--历史上放过款的值为0
--历史上未放过款的值为null-- 
    (SELECT   id_number
             ,count(DISTINCT source_flag) AS num1
    FROM risk_dm.customer_label
    WHERE    ORG_CODE = '301'
	       AND APP_RECOMM_BRANCH NOT IN ('7201','7101')
	       AND IS_RISK_FREE=0
		   AND MONTHS_BETWEEN(trunc(add_months(SYSDATE,-1),'MM') ,trunc(apply_date,'MM')) BETWEEN 0 AND 11     --日期--
	GROUP BY id_number)     B
ON a.id_number=b.id_number
LEFT JOIN 
    (SELECT distinct id_number 
	 FROM risk_dm.loan_acc 
	 WHERE begindate<=last_day(add_months(SYSDATE,-1)))     C     --日期--
ON a.id_number=c.id_number
LEFT JOIN 
--last_loan_months--
    (SELECT id_number
		   ,MIN(MONTHS_BETWEEN(trunc(add_months(SYSDATE,-1),'MM'),trunc(begindate,'MM'))) AS last_loan_months     --日期--
	FROM risk_dm.loan_acc
	WHERE    begindate<=last_day(add_months(SYSDATE,-1))
	       AND IS_RISK_FREE=0
	GROUP BY id_number)     D
ON a.id_number=d.id_number
--overdue_days_max（loan_all与loab_acc表关联用loanacno）--
LEFT JOIN 
	(SELECT   t1.id_number,max(MAXOVER_DAYS) AS overdue_days_max
	FROM 
	    (SELECT id_number FROM fxb.ly_ltv_cyd_modeldata1)     t1
	LEFT JOIN 
	    (SELECT id_number,loanacno,is_risk_free 
		FROM risk_dm.loan_acc 
		WHERE begindate<=last_day(add_months(SYSDATE,-1)))     t2     --日期--
	ON t1.id_number=t2.id_number
	LEFT JOIN 
		(SELECT   loanacno
		         ,MAXOVER_DAYS
		FROM risk_dm.loan_all
		WHERE stat_month=trunc(add_months(SYSDATE,-1),'MM')  )     t3     --日期--
	ON t2.loanacno=t3.loanacno
	WHERE t2.is_risk_free=0
	GROUP BY t1.id_number)     E
ON a.id_number=e.id_number
LEFT JOIN 
--LOAN_PAYED_TERMS--
	(SELECT ID_NUMBER
		   ,STAT_MONTH
		   ,SUM(CASE WHEN RANK=1 THEN NVL(PAY_TERM,0) ELSE 0 END) AS LOAN_PAYED_TERMS
--		   ,SYSDATE AS CREATE_DATE		   
	FROM   
		(SELECT   AA.*
			     ,BB.STAT_MONTH AS STAT_MONTHS
			     ,SDATE,SCAPI,STERM,SINTE,LOANACNO
			     ,CASE WHEN RDATE IS NULL OR RDATE>LAST_DAY THEN NULL ELSE RDATE END AS RDATE
			     ,MAX(CASE WHEN PAYOFFDATE<=LAST_DAY AND OVERBEGINDATE IS NULL THEN TTERM 
			               WHEN (RDATE<=LAST_DAY OR ((OVERBEGINDATE IS NULL OR OVERBEGINDATE>SDATE) AND RDATE IS NULL)) THEN STERM 
					   	   ELSE 0 END
					) OVER(PARTITION BY AA.ID_NUMBER,AA.STAT_MONTH,LOANACNO) AS PAY_TERM
			   ,RANK() OVER(PARTITION BY AA.ID_NUMBER,AA.STAT_MONTH,LOANACNO ORDER BY SDATE) AS RANK
		FROM 
			(SELECT ID_NUMBER
				   ,trunc(add_months(SYSDATE,-1),'MM') AS stat_month
			       ,last_day(add_months(SYSDATE,-1)) AS last_day
			 FROM fxb.ly_ltv_cyd_modeldata1) AA 
		LEFT JOIN 
			(SELECT ID_NUMBER,LOANACNO,TRUNC(SDATE,'MM') AS STAT_MONTH,STERM,SDATE,SCAPI,SINTE,RDATE,OVERBEGINDATE,PAYOFFDATE,TTERM 
			 FROM RISK_DM.MIDDLE_TABLE_0_2 WHERE IS_RISK_FREE=0) BB  
		ON AA.ID_NUMBER=BB.ID_NUMBER AND AA.STAT_MONTH>=BB.STAT_MONTH)
   	GROUP BY ID_NUMBER,STAT_MONTH)     F
ON a.id_number=f.id_number
;


--check
select * from ly_ltv_cyd_modeldata2 limit 100;
